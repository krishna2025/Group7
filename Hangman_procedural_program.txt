#include<stdio.h>    /*Header file declaration*/

#include<string.h>   /*<string.h> for strcmp();,strlen(); functions use*/

#include<stdlib.h>
#define NUMBER_OF_STRING 4
#define MAX_STRING_SIZE 40

void showHangman(int);

int main(void)
{
    char  *hangmanWord;
    char tempWord[100];       /**hangmanWord[] array for the original word and tempWord[] array to get the alphabet from user and compare it with original word**/
    char hangmanOutput[100];                    /**This array will show the remaining blanks and correct inputs**/
    int wrongTry = 7 , matchFound = 0;          /**player will get 5 chance, so we use wrongTry as chance counter**/
                                                /**matchFound to search the alphabet, if the alphabet from user does not exist
                                                in the original word it will remain 0, upon finding the word, matchFound will
                                                be set as 1**/
    int counter = 0 , position = 0, winner, length , i;
    char alphabetFromUser;

   


    char arr[NUMBER_OF_STRING][MAX_STRING_SIZE] = {"ant", "bat",  "fun", "kin"};
  hangmanWord = arr[random()%4];
length = strlen(hangmanWord);



   
   // printf("\n\n     The word has %d alphabets \n\n",length);  /**tell the user how many alphabets the word has**/
    printf("\n\n     GUESS the word");
    for( i = 0; i < length ; i++)
    {
        hangmanOutput[i] = '_';
        hangmanOutput[length] = '\0';
    }

    for(i = 0 ; i < length ; i++)
    {
        printf(" ");
        printf("%c",hangmanOutput[i]);        /**Show the Word With n(length of the original word) number of underscores (_)**/

    }
    while(wrongTry != 0)                        /**while loop for exiting the program when no try left**/
    {
        matchFound = 0;
       
        printf("\n\n\t Enter character HERE ==> ");

   fflush(stdin);

   scanf("%c",&alphabetFromUser);            /**get alphabet from user**/
    if(alphabetFromUser < 'a' || alphabetFromUser > 'z') /**In case player gives input other than 'a' to 'z' the console will ask again**/
    {
        system("cls");
        printf("\n\n\t Wrong input TRY AGAIN ");
        matchFound = 2;
    }
    fflush(stdin);
    if (matchFound != 2)
    {
        for(counter=0;counter<length;counter++)    /**for loop to check whether player input alphabet exists or not in the word**/
   {
   if(alphabetFromUser==hangmanWord[counter])
    {
      matchFound = 1;
                     }//end of if()
            }//end of for()

  if(matchFound == 0)                      /**in case of wrong guess**/
   {
           printf("\n\t :( You have %d tries left ",--wrongTry);
        // getchar();
              showHangman(wrongTry);
              //getchar();
   }//end of if()

  else
  {
    for(counter = 0; counter < length; counter++)
             {
              matchFound = 0;
                 if(alphabetFromUser == hangmanWord[counter])
         {
          position = counter ;
          matchFound = 1;
         }//end of if
         if(matchFound == 1)
         {
                 for(i = 0 ; i < length ; i++)
                 {
                      if( i == position)
                   {
                          hangmanOutput[i] = alphabetFromUser; /**Put the alphabet at right position**/
                      }
                      else if( hangmanOutput[i] >= 'a' && hangmanOutput[i] <= 'z' ) /** If the position already occupied
                                                                                  by same alphabet then no need to
                                                                                  fill again EASY!! and continue */
                      {
                          continue;
                   }

                      else
                      {
                          hangmanOutput[i] = '_';            /** Put a blank at not guessed alphabet position **/
                      }
                }
                tempWord[position] = alphabetFromUser;      /**put the alphabet in another char array to check with the original word**/
                tempWord[length] = '\0';  
                printf("%s",tempWord);/**put the NULL character at the end of the temp string**/
                winner = strcmp(tempWord,hangmanWord);      /**upon True comparison it will return 0**/

                if(winner == 0)                             /**if the player guessed the whole word right then he/she is the WINNER**/
                {
                    printf("\n\n\t \t YAHOO!!!!! You are the WINNER !!!!!");
                    printf("\n\n\t The Word was %s ",hangmanWord);
                    printf("\n\n\n\n\t\tEASY HUH???\n\n");
                    getchar();
                    return 0;
                }//end of inner if
      }//end of outer if
   }//end of for loop
      }//end of else
     }// end of if(matchFound != 2) condition

    printf("\n\n\t");
    for(i = 0 ; i < length ; i++)
      {
          printf(" ");
          printf("%c",hangmanOutput[i]);                /**Show the original Word With blanks and right Input alphabet**/
      }

    getchar();
    }//end of while loop

      if(wrongTry <= 0)                                 /**if the player can not guess the whole word in 5 chaces**/
      {
          printf("\n\n\t The Word was %s ",hangmanWord);
          printf("\n\n\t The man is dead!!");
     printf("\n\n\t Better luck next!!!");

      }
getchar();
return 0;
}//end of main();


void showHangman(int choice)                            /**This function show the hangman after each wrong try**/
 {

     switch(choice)
     {

     case 0:
         system("Wrong Letter");
printf("\n\t||===== Hangman");

break;
     case 1:
         system("Wrong Letter");
printf("\n\t||===== Hangma");

break;
     case 2:
         system("Wrong Letter");
printf("\n\t||===== Hangm");

break;
     case 3:
         system("Wrong Letter");
printf("\n\t||===== Hang");

break;
     case 4:
         system("Wrong Letter");
printf("\n\t||===== Han");

break;
     case 5:
         system("Wrong Letter");
printf("\n\t||===== Ha");
break;
case 6:
         system("Wrong Letter");
printf("\n\t||===== H");

break;
      }//end of switch-case
      return;
 }
